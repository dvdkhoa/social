using CloudinaryDotNet;
using CloudinaryDotNet.Actions;

namespace SocialNetwork.Api.Helpers
{
    public class CloudinaryHelper
    {
        
        private const string _cloudName = "dqkpxkmip";
        private const string _apiKey = "372141596394814";
        private const string _apiSecret = "zDvxvy0zuhAaYmPj23RJPfpCfh0";

        private static Account _account = new Account(_cloudName, _apiKey, _apiSecret);


        public static Cloudinary Cloudinary = new Cloudinary(_account);

        public async static Task<String> UploadFileToCloudinary(IFormFile formFile, string? fileType = null)
        {
            var filePath = Path.GetTempFileName();

            using (var stream = System.IO.File.Create(filePath))
            {
                // The formFile is the method parameter which type is IFormFile
                // Saves the files to the local file system using a file name generated by the app.
                await formFile.CopyToAsync(stream);
            }
            string newName = Guid.NewGuid().ToString();

            if(fileType == ".mp4")
            {
                var uploadParams = new VideoUploadParams
                {
                    PublicId = $"socialnetwork/{newName}",
                    File = new FileDescription(filePath)
                };
                var uploadResults = Cloudinary.Upload(uploadParams);

                var url = uploadResults.Url;

                return url.ToString();
            }
            else
            {
                var uploadParams = new RawUploadParams
                {
                    PublicId = $"socialnetwork/{newName}",
                    File = new FileDescription(filePath)
                };

                var uploadResults = Cloudinary.Upload(uploadParams);

                var url = uploadResults.Url;

                return url.ToString();
            }
        }
    }
}
